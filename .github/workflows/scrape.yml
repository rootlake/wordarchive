name: Scrape and Deploy

on:
  schedule:
    # Run every day at 3:00 UTC (avoiding midnight when many other actions run)
    - cron: '0 3 * * *'
  
  # Allow manual triggers for testing
  workflow_dispatch:
  
  # Also run on pushes to the main branch
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  scrape-build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run scraper
        run: |
          python scraper.py
      
      - name: Check for changes in scraper output
        id: check_changes
        run: |
          if git status --porcelain | grep -q 'words.json\|words.txt\|metadata.json'; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit scraper changes if any
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git add words.json words.txt metadata.json
          git commit -m "Update Wordle archive - $(date +'%Y-%m-%d')"
          git push
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Install Node.js dependencies
        run: npm ci || npm install
        
      - name: Build site
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Copy required files to dist
        run: |
          # Ensure words.json is available for the frontend
          cp words.json dist/ || true
          # Make sure script.js is available with type="module"
          cp script.js dist/ || true
          # Make sure style.css is in dist folder
          cp style.css dist/ || true
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 